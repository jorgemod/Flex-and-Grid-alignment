/* variables para configurar los colores de una forma más facil */
:root {
    --azul: #0071b7;
    --blanco: #FFF;
    --naranja: #ff4f1e;
}
html {
    font-size: 62.5%; /** 1REM = 10pX **/
    box-sizing: border-box;
}
*, *:before, *:after {
    box-sizing: inherit;
}
  

body {
    /* la funcion var la ocupamos para ocupar los colores definidos en el root */
    background-color: var(--azul);
    font-family:  'Lato', sans-serif;
    font-size: 1.6rem;
}

h1, h2 {
    color: var(--blanco);
    text-align: center;
    margin: 5rem 0;
    padding: 1rem;
}
.caja-curso {
    background-color: var(--naranja);
    text-align: center;
    color: var(--blanco);
    padding: 5rem;

}
.caja-curso h1 {
    margin: 0;
}
.caja-curso p {
    font-size: 2.4rem;
}
.caja-curso a {
    font-size: 2.4rem;
    padding: 2rem;
    display: inline-block;
    text-decoration: none;
    color: var(--blanco);
    padding: 0;
}


.contenedor {
    max-width: 120rem;
    margin: 0 auto;
}
.box {
    background-color: var(--naranja);
    color: var(--blanco);
    padding: 5rem;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 4rem;
    border: 1rem solid #bb2b03;
}

.contenedor > div {
    background-color: var(--blanco);
    padding: 5rem;
}

/* //////////////////////////////////////////1.- Display Flex///////////////////////////////////////////////////// */

.d-flex{
    display: flex;
}

/* ////////////////////////////////////////////2.- Flex direction /////////// */

.d-flex-2{
    display: flex;
    flex-direction: column;
}

/* ////////////////////////////////////////////3.- Justify Content (Dirección Row) /////////// */

.d-flex-3{
    display: flex;
    justify-content: space-around;
    /* justify-content: center; */
}

/* ////////////////////////////////////////////4.- Justify Content (Dirección Column) /////////// */

.d-flex-4{
    display: flex;
    flex-direction: column;
    height: 1000px;
    justify-content: space-around;
}

/* ////////////////////////////////////////////5.- Align Items (Dirección Row) /////////// */
.d-flex-5{
    display: flex;
    flex-direction: row;
    /* aqui entonces el align items alinea verticalmente cuando la direccion es row */
    /* los valores disponibles son: */
    /* align-items: flex-end;
    align-items: flex-start; */
    align-items: center;
    height: 400px;
}

/* ////////////////////////////////////////////6.- Align Items (Dirección Columna) /////////// */

.d-flex-6{
    display: flex;
    flex-direction: column;
    height: 700px;
    /* en este caso donde la direccion es coluumna 
    el align items acomoda de forma horizontal y sus valores son los siguientes*/
    align-items: center;
    /* align-items: flex-end; */
    /* align-items: flex-start; */
    /* align-items: stretch;  */
}


/* //////////////////////////////////////////// 7.- Align Items y JustifyContent /////////// */

.d-flex-7{
    display: flex;
    flex-direction: row;
    height: 500px;

    /* de manera vertical es  */
    align-items: center;
    /* de manera horizontal es  */
    justify-content: flex-end;
}


/* ////////////////////////////////////////////     8.- flex basis                  /////////// */

.d-flex-8{
    display: flex;
}
/* en este caso el flex basis se le aplica directamente a cada uno de los elementos 
y es flexible osea que en un inicio tienen 200px pero si requiere más entonces se los asignará sin problema para evitar desbordes */
.d-flex-8 box{
    flex-basis: 200px;
}

/* ////////////////////////////////////////////     9.- Gap y Calc                  /////////// */

/* activamos las propiedades flex y luego el space between en para 
separar los elementos con el espacio sobrante  */
.d-flex-9{
    display: flex;
   justify-content: space-between;
}
/* usamos un pseudo selector llamado nth-child para seleccionar al primer hijo 
que tenga la clase "box" y le damos la mitad del espacio menos 1 rem que es 
de separacion  */
.d-flex-9 .box:nth-child(1){
    flex-basis: calc(50% - 1rem);
}
/* para los demás les damos 25 menos 1 rem para hacerlo simetrico todo 
y el space between tomará esos espacion disponibles para separar los boxes */
.d-flex-9 .box:nth-child(2),
.d-flex-9 .box:nth-child(3){
    flex-basis: calc(25% - 1rem);
}

/* NOTA: tambien tenemos la propiedad gap para poner espacios entre los flex 
peero esta propiedad es muy reciente y no todos los navegadores la soportan */


/* ////////////////////////////////////////////     10.- Flex Wrap                  /////////// */

.d-flex-10{
    display: flex; 
    /* la siguiente propiedad nos sirve para que no se vayan todos los elementos a la derecha
    sino que se haga un salto de linea si ya no caben a la derecha */
    flex-wrap: wrap;
}

.d-flex-10 .box{
    flex-basis: 33.3%;
    
}


/* ////////////////////////////////////////////     11.- Flex Grow                  /////////// */

.d-flex-11{
    display: flex;
}
/* el factor de crecimiento va en los hijos 
este es como una reparticion de pixeles que quiere decir que el espacio
disponible quitando margin y paddin lo irá repartiendo por partes
segun el valor de flex-grow */
.d-flex-11 .box:nth-child(1){
    flex-grow: 4;
}
.d-flex-11 .box:nth-child(2){
    flex-grow: 1;
}
.d-flex-11 .box:nth-child(3){
    flex-grow: 1;
}


/* ////////////////////////////////////////////     12.- Flex Shrink                  /////////// */
/* este es para cuando la pagina se encoje
aqui se ve como va disminuyendo el tamaño  */
.d-flex-12{
    display: flex;
}
.d-flex-12 .box{
    /* factor de crecimiento lo tomará despues de su tamaño base
    es decir despues de esos 300px de base, empezará a crecer hasta ocupar
    todo el ancho de la pantalla */
    flex-grow: 1;
    /* este es el ancho base que por defecto tendrán y se amolda al conetenido  */
    
    flex-basis: 300px;
}
/* ahora cuando la pestaña se haga pequeña entonces el facto con el que disminuye
es de 2, recuerda que el valor por defecto es de 1 
al ponerle dos a un elemento entonces este disminuirá más rapido su tamaño
con respecto a los otros  */
.d-flex-12 .box:nth-child(3)
{
    flex-shrink: 2;
}


/* ////////////////////////////////////////////     13.- Flex Shorthand                  /////////// */

.d-flex-13 {
    display: flex;
    gap: 1rem;
}
.d-flex-13 .box{
    flex: 1 0 33.3%;
}

/* el flex es una abreviacion de los que vimos antes
el primer valor es grow 
el segundo valor es shrink 
y el tercer valor es el basis */